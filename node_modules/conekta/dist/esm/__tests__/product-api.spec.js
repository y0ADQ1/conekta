var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { ProductsApi } from "../api";
import { Configuration } from "../configuration";
import { baseTest } from "./base-test";
describe("Product API", () => {
    let client;
    beforeAll(() => {
        const config = new Configuration({ accessToken: "key_xxxxxxxx" });
        client = new ProductsApi(config, baseTest.BasePath);
    });
    describe("general", () => {
        it("should be defined", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(client).toBeDefined();
        }));
    });
    describe("create product", () => {
        it("should create product", () => __awaiter(void 0, void 0, void 0, function* () {
            const id = "ord_2tVyWPnCPWbrV37mW";
            const request = {
                name: "Pago Mensualidad test",
                description: "Mes de marz.",
                quantity: 1,
                unit_price: 1000,
                tags: ["Pago 2", "Pago mensualidad 2"],
            };
            const response = (yield client.ordersCreateProduct(id, request, "es")).data;
            expect(response).toBeDefined();
            expect(response.name).toBe(request.name);
            expect(response.parent_id).toBe(id);
            expect(response.object).toBe("line_item");
        }));
    });
    describe("update product", () => {
        it("should update product", () => __awaiter(void 0, void 0, void 0, function* () {
            const id = "ord_2tVyWPnCPWbrV37mW";
            const product_id = "line_item_2tVz8UkyWhSxLfUd7";
            const request = {
                description: "Pago Mensualidad",
            };
            const response = (yield client.ordersUpdateProduct(id, product_id, request, "es")).data;
            expect(response).toBeDefined();
            expect(response.parent_id).toBe(id);
            expect(response.id).toBe(product_id);
            expect(response.object).toBe("line_item");
        }));
    });
    describe("delete product", () => {
        it("should delete product", () => __awaiter(void 0, void 0, void 0, function* () {
            const id = "ord_2tVyWPnCPWbrV37mW";
            const product_id = "line_item_2tVz8UkyWhSxLfUd7";
            const response = (yield client.ordersDeleteProduct(id, product_id, "es")).data;
            expect(response).toBeDefined();
            expect(response.parent_id).toBe(id);
            expect(response.id).toBe(product_id);
            expect(response.object).toBe("line_item");
        }));
    });
});
