var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
import { PlansApi } from "../api";
import { Configuration } from "../configuration";
import { baseTest } from "./base-test";
describe('Plans API', () => {
    let client;
    beforeAll(() => {
        const config = new Configuration({ accessToken: "key_xxxxxxxx" });
        client = new PlansApi(config, baseTest.BasePath);
    });
    describe("general", () => {
        it("should be defined", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(client).toBeDefined();
        }));
    });
    describe("create plan", () => {
        it("should create plan", () => __awaiter(void 0, void 0, void 0, function* () {
            const request = {
                amount: 100,
                currency: "MXN",
                interval: "month",
                name: "Gold Plan",
                trial_period_days: 15,
                frequency: 1,
            };
            const response = (yield client.createPlan(request, "es")).data;
            expect(response).toBeDefined();
            expect(response.expiry_count).toBeNull();
            expect(response.livemode).toBeTruthy();
            expect(response.name).toBe("Gold Plan");
        }));
    });
    describe("delete plan", () => {
        it("should delete plan", () => __awaiter(void 0, void 0, void 0, function* () {
            const plan_id = "plan_2tZb5q8Z3PYpg6SJd";
            const response = (yield client.deletePlan(plan_id, "es")).data;
            expect(response).toBeDefined();
            expect(response.id).toBe(plan_id);
        }));
    });
    describe("Get plan", () => {
        it("should get plan", () => __awaiter(void 0, void 0, void 0, function* () {
            const plan_id = "plan_2tZb5q8Z3PYpg6SJd";
            const response = (yield client.getPlan(plan_id, "es")).data;
            expect(response).toBeDefined();
            expect(response.id).toBe(plan_id);
            expect(response.currency).toBe("MXN");
        }));
    });
    describe("Get plans", () => {
        it("should get plans", () => __awaiter(void 0, void 0, void 0, function* () {
            const response = (yield client.getPlans("es", undefined, 20)).data;
            expect(response).toBeDefined();
            expect(response.data.length).toBe(10);
            expect(response.has_more).toBeFalsy();
            expect(response.next_page_url).toBeNull();
            expect(response.previous_page_url).toBeNull();
        }));
    });
    describe("Update plan", () => {
        it("should update plan", () => __awaiter(void 0, void 0, void 0, function* () {
            const plan_id = "plan_2tZb5q8Z3PYpg6SJd";
            const request = {
                name: "updated name",
            };
            const response = (yield client.updatePlan(plan_id, request, "es")).data;
            expect(response).toBeDefined();
            expect(response.id).toBe(plan_id);
            expect(response.name).toBe(request.name);
        }));
    });
});
