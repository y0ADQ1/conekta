"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const api_1 = require("../api");
const configuration_1 = require("../configuration");
const base_test_1 = require("./base-test");
describe("shpping api", () => {
    let client;
    beforeAll(() => {
        const config = new configuration_1.Configuration({ accessToken: "key_xxxxxxxx" });
        client = new api_1.ShippingsApi(config, base_test_1.baseTest.BasePath);
    });
    describe("general", () => {
        it("should be defined", () => __awaiter(void 0, void 0, void 0, function* () {
            expect(client).toBeDefined();
        }));
    });
    describe("Order Create shipping", () => {
        it("should create shipping", () => __awaiter(void 0, void 0, void 0, function* () {
            const id = "ord_2tVyWPnCPWbrV37mW";
            const request = {
                amount: 500,
            };
            const response = (yield client.ordersCreateShipping(id, request, "es")).data;
            expect(response).toBeDefined();
            expect(response.parent_id).toBe(id);
            expect(response.amount).toBe(request.amount);
            expect(response.object).toBe("shipping_line");
        }));
    });
    describe("Order Update shipping", () => {
        it("should update shipping", () => __awaiter(void 0, void 0, void 0, function* () {
            const id = "ord_2tVyWPnCPWbrV37mW";
            const shipping_id = "ship_lin_2tVzNuDGSaDwreMg6";
            const request = {
                amount: 540,
            };
            const response = (yield client.ordersUpdateShipping(id, shipping_id, request, "es")).data;
            expect(response).toBeDefined();
            expect(response.parent_id).toBe(id);
            expect(response.id).toBe(shipping_id);
            expect(response.amount).toBe(request.amount);
            expect(response.object).toBe("shipping_line");
        }));
    });
    describe("Order Delete shipping", () => {
        it("should delete shipping", () => __awaiter(void 0, void 0, void 0, function* () {
            const id = "ord_2tVyWPnCPWbrV37mW";
            const shipping_id = "ship_lin_2tVzNuDGSaDwreMg6";
            const response = (yield client.ordersDeleteShipping(id, shipping_id, "es")).data;
            expect(response).toBeDefined();
            expect(response.parent_id).toBe(id);
            expect(response.id).toBe(shipping_id);
            expect(response.object).toBe("shipping_line");
        }));
    });
});
